from nmigen import *
from nmigen.build import Platform

# --------------------------------------------------------------------------------------------------
# Sample RAM
# --------------------------------------------------------------------------------------------------

DUMMY_RAM = [
	# sine
	0x8, 0x8, 0x9, 0xA, 0xB, 0xB, 0xC, 0xD, 0xD, 0xE, 0xE, 0xF, 0xF, 0xF, 0xF, 0xF,
	0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xE, 0xE, 0xD, 0xD, 0xC, 0xB, 0xB, 0xA, 0x9, 0x8,
	0x8, 0x7, 0x6, 0x5, 0x4, 0x4, 0x3, 0x2, 0x2, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x2, 0x2, 0x3, 0x4, 0x4, 0x5, 0x6, 0x7,

	# saw
	0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 0x2, 0x3, 0x3, 0x3, 0x3,
	0x4, 0x4, 0x4, 0x4, 0x5, 0x5, 0x5, 0x5, 0x6, 0x6, 0x6, 0x6, 0x7, 0x7, 0x7, 0x7,
	0x8, 0x8, 0x8, 0x8, 0x9, 0x9, 0x9, 0x9, 0xA, 0xA, 0xA, 0xA, 0xB, 0xB, 0xB, 0xB,
	0xC, 0xC, 0xC, 0xC, 0xD, 0xD, 0xD, 0xD, 0xE, 0xE, 0xE, 0xE, 0xF, 0xF, 0xF, 0xF,

	# tri
	0x0, 0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x4, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7,
	0x8, 0x8, 0x9, 0x9, 0xA, 0xA, 0xB, 0xB, 0xC, 0xC, 0xD, 0xD, 0xE, 0xE, 0xF, 0xF,
	0xF, 0xF, 0xE, 0xE, 0xD, 0xD, 0xC, 0xC, 0xB, 0xB, 0xA, 0xA, 0x9, 0x9, 0x8, 0x8,
	0x7, 0x7, 0x6, 0x6, 0x5, 0x5, 0x4, 0x4, 0x3, 0x3, 0x2, 0x2, 0x1, 0x1, 0x0, 0x0,

	# square
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF,
	0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF, 0xF,
] + [0] * 256

class SampleRam(Elaboratable):
	def __init__(self):
		# -------------------------------------
		# Inputs

		self.addr = Signal(9)
		self.wdat = Signal(4)
		self.we   = Signal(1)

		# -------------------------------------
		# Outputs

		self.rdat = Signal(4)

	def elaborate(self, platform: Platform) -> Module:
		m = Module()

		# -------------------------------------
		# Submodules

		mem = Memory(width = 4, depth = 512, init = DUMMY_RAM)
		m.submodules.rdport = rdport = mem.read_port()
		m.submodules.wrport = wrport = mem.write_port()

		# -------------------------------------
		# Combinational Logic

		m.d.comb += [
			wrport.addr.eq(self.addr),
			wrport.data.eq(self.wdat),
			wrport.en.  eq(self.we),

			rdport.addr.eq(self.addr),
			self.rdat.  eq(rdport.data),
		]

		return m
